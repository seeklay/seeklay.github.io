<!DOCTYPE html>
<head>
    <title>seeklay</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon"  href="favicon.ico" />
    <link rel="shortcut icon" type="image/png" href="favicon.png" />
    <meta name="description" content="seeklay's personal site" />
    <meta name="keywords" content="seeklay,сиклей,сиклай,секлай,сиклэй,シークレイ,neseeklay" />
    <meta name='language' content='EN' />
    <meta name='robots' content='index,follow' />
    <meta name='Classification' content='People and Blogs' />

    <meta name="dc.language" CONTENT="EN" />
    <meta name="dc.source" CONTENT="https://seeklay.icu/" />
    <meta name="dc.title" CONTENT="seeklay" />
    <meta name="dc.keywords" CONTENT="seeklay,сиклей,сиклай,секлай,сиклэй,シークレイ,neseeklay" />    
    <meta name="dc.description" CONTENT="seeklay's personal site" />

    <meta name='HandheldFriendly' content='True' />
    <meta name='MobileOptimized' content='width' />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black" />
    <meta name="theme-color" content="#e056fd" />
    <meta name="apple-mobile-web-app-title" content="title" />
    <link rel="icon" sizes="256x256" href="favicon.png" />
    <link rel="apple-touch-icon" href="favicon.png" />

    <meta http-equiv='Expires' content='0' />
    <meta http-equiv='Pragma' content='no-cache' />
    <meta http-equiv='Cache-Control' content='no-cache' />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://seeklay.icu/" />
    <meta property="og:title" content="seeklay" />
    <meta property="og:description" content="seeklay's personal site" />
    <meta property="og:image" content="https://seeklay.icu/favicon.ico" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" />    
    <link href="https://fonts.googleapis.com/css?family=Darker+Grotesque|Mansalva&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css?family=JetBrains+Mono&display=swap" rel="stylesheet" />

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-EM2ZT4VLVD"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'G-EM2ZT4VLVD');
    </script>
    <script>
        const titles = ['SeekLay', 'シークレイ'];

        function writeTitle(title, speed){
            let i = 0;
            writingInterval = setInterval(() => {
                if (i == title.length){          
                    document.title = title;
                    clearInterval(writingInterval);
                    return;
                }                
                document.title = title.slice(0, i) + "|";
                i++;                
            }, speed)
        }        

        function getRandomInt(max){
            return Math.floor(Math.random() * max);
        }

        title = titles[getRandomInt(2)];

        window.addEventListener("load", () => {            
            if (window.location.href.split('?')[1] == "flcl"){
                document.getElementById('bg').style.background = "linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)), url('flcl.jpg')";
                document.getElementById('bg').style.backgroundSize = "cover";
                document.getElementById('bg').style.backgroundPosition = "top";
                document.getElementById('canvas').remove();
                title = titles[1];
            }
            if (window.location.href.split('?')[1] == "ua"){
                document.getElementById('bg').style.backgroundImage = "url('freedom-square.jpg')";
            }
            
            document.getElementById('title').textContent = title;
        });

        writeTitle(title, 273);

        window.onkeydown = (e) => {
            if(e.keyCode == 123 || e.keyCode == 85 || e.keyCode == 17 || e.keyCode == 16 || e.keyCode == 74 || e.keyCode == 73) return false;
        };

        window.onkeypress = (e) => {
            if(e.keyCode == 123 || e.keyCode == 85 || e.keyCode == 17 || e.keyCode == 16 || e.keyCode == 74 || e.keyCode == 73) return false;
        };

        if (/android|iphone|kindle|ipad/i.test(navigator.userAgent)){       
            window.addEventListener("load", () => {       
                document.getElementById('canvas').style.opacity = 0.5
            });
        }
    </script>
    <style>
        body {
            cursor: crosshair;
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            border: 0;            
            left: 0;
            right: 0;
            margin: 0;
        }

        #foreground{
            -webkit-user-select: none;
            user-select: none;
            position: absolute;
            top: 50%;
            font-size: 60px;
            left: 50%;       
            transform: translate(-50%, -50%);
            text-align: center;
            font-size: 4.3vh;
        }
        #title{
            font-family: 'Mansalva', cursive;
            color: white;
            font-size: 4.7vh;
        }
        #links{
            color: white;
            text-align: center;
        }
        .link{
            margin: 3.7px;
        }
        .link:hover{         
            cursor: pointer;
        }
        .fa-twitch:hover{
            color:  #6441a5;
        }
        .fa-vk:hover{
            color: #0077FF;
        }
        .fa-youtube:hover{
            color: #FF0000;
        }
        .fa-gitlab:hover{
            color: #FCA326;
        }
        .fa-telegram:hover{
            color:#0088cc;
        }
        .fa-instagram:hover{
            color: transparent;
            background: radial-gradient(circle at 30% 107%, #fdf497 0%, #fdf497 5%, #fd5949 45%, #d6249f 60%, #285AEB 90%);
            background: -webkit-radial-gradient(circle at 30% 107%, #fdf497 0%, #fdf497 5%, #fd5949 45%, #d6249f 60%, #285AEB 90%);
            background-clip: text;
            -webkit-background-clip: text;    
        }
        a{
            color: inherit;
            text-decoration: none;
        }
        #bg{
            background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('Konachan_com_224904_animal_ball_barefoot_bikini_flowers_fox_foxgirl.jpg');
            background-size: cover;            
            background-position: top;
            width: 100%;
            height: 100%;
        }
        #canvas{
            opacity: 0.7;
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            bottom: 0;
            right: 0;
            left: 0;
        }
        /* Hide scrollbar for Chrome, Safari and Opera */
        ::-webkit-scrollbar {
            display: none;
        }
        #footer {
            cursor: auto;
            width: auto;
            height: auto;
            font-size: 2.3vh;
            font-family: "JetBrains Mono";
            background: #131414;
            color: #3c40c6;
            padding: 12px;
            display: grid;
            justify-content: center;

        }
        #scroll-down-arr {
            color: #3c40c6;   
        }
        p {
            margin: 0;
            user-select: none;
        }
        a {
            cursor: pointer;
        }
    </style>
</head>
<body oncontextmenu="return false;">
    <div id="bg">
        <canvas id="canvas"></canvas>
    </div>

    <div id="foreground">
        <span id="title">SeekLay</span>
        <div id="links">
            <a href="https://vk.com/seeklay/" data-toggle="tooltip" title="VK Page" class="link">
                <i class="fa-brands fa-vk" aria-hidden="true"></i>
            </a>
            <a href="https://youtube.com/@seeklay" data-toggle="tooltip" title="YouTube channel" class="link">
                <i class="fa-brands fa-youtube"></i>
            </a>
            <a href="https://twitch.tv/neseeklay" data-toggle="tooltip" title="Twitch Channel" class="link">
               <i class="fa-brands fa-twitch"></i>
            </a>
            <a href="http://instagram.com/neseeklay" data-toggle="tooltip" title="Instagram Page" class="link">
                <i class="fa-brands fa-instagram"></i>
            </a>
            <a href="https://gitlab.com/seeklay/" data-toggle="tooltip" title="GitLab Page" class="link">
                <i class="fa-brands fa-gitlab" aria-hidden="true"></i>
            </a>   
            <a href="https://t.me/neseeklay/" data-toggle="tooltip" title="Telegram channel" class="link">
                <i class="fa-brands fa-telegram"></i>
            </a>
            <!--
            <a href="donate.htm" data-toggle="tooltip" title="Support me" class="link">
                <i class="fa-solid fa-dollar-sign"></i>
            </a>
            -->
        </div>
        <a id="scroll-down-arr" class="fa-solid fa-chevron-down" onclick="document.getElementById('footer').scrollIntoView()"></a>
    </div>

    <div id="footer">        
        <p>Hi there, i'm @seeklay</p>
        <p>16.6 led, pyt-hon, network interactions</p>        
        <br>        
        <a href="mailto:amy@seeklay.icu">Email me - &lt;amy at seeklay.icu&gt;</a>
    </div>
</body>

<script>'use strict'; var _0x519f73=_0x307c;!function($,x){for(var e=_0x307c,r=$();;)try{if(-parseInt(e(356))/1+parseInt(e(381))/2+-parseInt(e(463))/3*(parseInt(e(476))/4)+-parseInt(e(395))/5+parseInt(e(376))/6+-parseInt(e(461))/7*(parseInt(e(481))/8)+parseInt(e(380))/9==827140)break;r.push(r.shift())}catch(t){r.push(r.shift())}}(_0x491e,827140);var canvas=document[_0x519f73(468)](_0x519f73(372))[0];canvas[_0x519f73(402)]=canvas[_0x519f73(434)],canvas[_0x519f73(410)]=canvas.clientHeight;var config={TEXTURE_DOWNSAMPLE:1,DENSITY_DISSIPATION:.98,VELOCITY_DISSIPATION:.99,PRESSURE_DISSIPATION:.8,PRESSURE_ITERATIONS:25,CURL:30,SPLAT_RADIUS:.005},pointers=[],splatStack=[],_getWebGLContext=getWebGLContext(canvas),gl=_getWebGLContext.gl,ext=_getWebGLContext.ext,support_linear_float=_getWebGLContext.support_linear_float;function _0x307c($,x){var e=_0x491e();return(_0x307c=function($,x){return e[$-=356]})($,x)}function getWebGLContext($){var x=_0x519f73,e={alpha:!1,depth:!1,stencil:!1,antialias:!1},r=$[x(430)]("webgl2",e),t=!!r;t||(r=$[x(430)](x(446),e)||$[x(430)](x(421),e));var a=r[x(408)](x(441)),i=r[x(408)](x(457));t&&(r[x(408)](x(364)),i=r[x(408)](x(411))),r[x(438)](0,0,0,1);var o=t?r[x(371)]:r[x(397)],l=t?r[x(414)]:r.RGBA,_=t?r.RG:r[x(397)],n=t?r[x(401)]:a[x(374)];return{gl:r,ext:{internalFormat:o,internalFormatRG:l,formatRG:_,texType:n},support_linear_float:i}}function pointerPrototype(){var $=_0x519f73;this.id=-1,this.x=0,this.y=0,this.dx=0,this.dy=0,this[$(390)]=!1,this[$(433)]=!1,this.color=[30,0,300]}pointers[_0x519f73(422)](new pointerPrototype);var GLProgram=function(){var $=_0x519f73;function x($,e){var r=_0x307c;if(!(this instanceof x))throw TypeError(r(415));if(this.uniforms={},this[r(360)]=gl[r(451)](),gl[r(426)](this.program,$),gl[r(426)](this[r(360)],e),gl[r(465)](this.program),!gl[r(459)](this[r(360)],gl.LINK_STATUS))throw gl[r(477)](this[r(360)]);for(var t=gl.getProgramParameter(this[r(360)],gl.ACTIVE_UNIFORMS),a=0;a<t;a++){var i=gl.getActiveUniform(this[r(360)],a)[r(419)];this[r(443)][i]=gl.getUniformLocation(this.program,i)}}return x[$(437)].bind=function x(){var e=$;gl[e(440)](this[e(360)])},x}();function compileShader($,x){var e=_0x519f73,r=gl[e(358)]($);if(gl.shaderSource(r,x),gl.compileShader(r),!gl[e(412)](r,gl.COMPILE_STATUS))throw gl[e(450)](r);return r}var baseVertexShader=compileShader(gl[_0x519f73(442)],_0x519f73(467)),clearShader=compileShader(gl.FRAGMENT_SHADER,_0x519f73(445)),displayShader=compileShader(gl[_0x519f73(365)],_0x519f73(466)),splatShader=compileShader(gl.FRAGMENT_SHADER,_0x519f73(373)),advectionManualFilteringShader=compileShader(gl[_0x519f73(365)],_0x519f73(470)),advectionShader=compileShader(gl[_0x519f73(365)],_0x519f73(473)),divergenceShader=compileShader(gl.FRAGMENT_SHADER,_0x519f73(409)),curlShader=compileShader(gl[_0x519f73(365)],_0x519f73(432)),vorticityShader=compileShader(gl[_0x519f73(365)],_0x519f73(378)),pressureShader=compileShader(gl.FRAGMENT_SHADER,_0x519f73(417)),gradientSubtractShader=compileShader(gl[_0x519f73(365)],"precision highp float; precision mediump sampler2D; varying vec2 vUv; varying vec2 vL; varying vec2 vR; varying vec2 vT; varying vec2 vB; uniform sampler2D uPressure; uniform sampler2D uVelocity; vec2 boundary (in vec2 uv) {     uv = min(max(uv, 0.0), 1.0);     return uv; } void main () {     float L = texture2D(uPressure, boundary(vL)).x;     float R = texture2D(uPressure, boundary(vR)).x;     float T = texture2D(uPressure, boundary(vT)).x;     float B = texture2D(uPressure, boundary(vB)).x;     vec2 velocity = texture2D(uVelocity, vUv).xy;     velocity.xy -= vec2(R - L, T - B);     gl_FragColor = vec4(velocity, 0.0, 1.0); }"),textureWidth=void 0,textureHeight=void 0,density=void 0,velocity=void 0,divergence=void 0,curl=void 0,pressure=void 0;initFramebuffers();var clearProgram=new GLProgram(baseVertexShader,clearShader),displayProgram=new GLProgram(baseVertexShader,displayShader),splatProgram=new GLProgram(baseVertexShader,splatShader),advectionProgram=new GLProgram(baseVertexShader,support_linear_float?advectionShader:advectionManualFilteringShader),divergenceProgram=new GLProgram(baseVertexShader,divergenceShader),curlProgram=new GLProgram(baseVertexShader,curlShader),vorticityProgram=new GLProgram(baseVertexShader,vorticityShader),pressureProgram=new GLProgram(baseVertexShader,pressureShader),gradienSubtractProgram=new GLProgram(baseVertexShader,gradientSubtractShader);function initFramebuffers(){var $=_0x519f73;textureWidth=gl[$(448)]>>config.TEXTURE_DOWNSAMPLE,textureHeight=gl.drawingBufferHeight>>config[$(385)];var x=ext[$(393)],e=ext.internalFormatRG,r=ext[$(462)],t=ext.texType;density=createDoubleFBO(0,textureWidth,textureHeight,x,gl[$(397)],t,support_linear_float?gl[$(480)]:gl[$(388)]),velocity=createDoubleFBO(2,textureWidth,textureHeight,e,r,t,support_linear_float?gl.LINEAR:gl.NEAREST),divergence=createFBO(4,textureWidth,textureHeight,e,r,t,gl[$(388)]),curl=createFBO(5,textureWidth,textureHeight,e,r,t,gl[$(388)]),pressure=createDoubleFBO(6,textureWidth,textureHeight,e,r,t,gl[$(388)])}function createFBO($,x,e,r,t,a,i){var o=_0x519f73;gl[o(387)](gl[o(382)]+$);var l=gl.createTexture();gl[o(479)](gl[o(436)],l),gl[o(361)](gl[o(436)],gl[o(449)],i),gl[o(361)](gl[o(436)],gl[o(439)],i),gl[o(361)](gl.TEXTURE_2D,gl[o(403)],gl[o(366)]),gl[o(361)](gl[o(436)],gl[o(472)],gl[o(366)]),gl[o(420)](gl.TEXTURE_2D,0,r,x,e,0,t,a,null);var _=gl[o(435)]();return gl.bindFramebuffer(gl[o(452)],_),gl.framebufferTexture2D(gl[o(452)],gl[o(431)],gl[o(436)],l,0),gl.viewport(0,0,x,e),gl[o(460)](gl.COLOR_BUFFER_BIT),[l,_,$]}function createDoubleFBO($,x,e,r,t,a,i){var o=createFBO($,x,e,r,t,a,i),l=createFBO($+1,x,e,r,t,a,i);return{get first(){return o},get second(){return l},swap:function $(){var x=o;o=l,l=x}}}var blit=function(){var $=_0x519f73;return gl[$(389)](gl.ARRAY_BUFFER,gl[$(425)]()),gl[$(458)](gl[$(359)],new Float32Array([-1,-1,-1,1,1,1,1,-1]),gl[$(396)]),gl.bindBuffer(gl[$(375)],gl[$(425)]()),gl[$(458)](gl[$(375)],new Uint16Array([0,1,2,0,2,3]),gl[$(396)]),gl[$(424)](0,2,gl[$(474)],!1,0,0),gl[$(469)](0),function(x){var e=$;gl[e(427)](gl[e(452)],x),gl[e(398)](gl[e(478)],6,gl[e(406)],0)}}(),lastTime=Date[_0x519f73(454)]();function update(){var $=_0x519f73;resizeCanvas();var x=Math[$(475)]((Date[$(454)]()-lastTime)/1e3,.016);if(lastTime=Date.now(),gl.viewport(0,0,textureWidth,textureHeight),splatStack[$(394)]>0)for(var e=0;e<splatStack[$(429)]();e++){var r=[10*Math[$(357)](),10*Math[$(357)](),10*Math[$(357)]()],t=canvas[$(402)]*Math[$(357)](),a=canvas[$(410)]*Math[$(357)](),i=1e3*(Math[$(357)]()-.5);splat(t,a,i,1e3*(Math.random()-.5),r)}advectionProgram.bind(),gl[$(368)](advectionProgram[$(443)].texelSize,1/textureWidth,1/textureHeight),gl[$(369)](advectionProgram[$(443)][$(399)],velocity.first[2]),gl.uniform1i(advectionProgram[$(443)][$(363)],velocity.first[2]),gl[$(386)](advectionProgram.uniforms.dt,x),gl[$(386)](advectionProgram[$(443)][$(447)],config[$(407)]),blit(velocity[$(377)][1]),velocity[$(413)](),gl[$(369)](advectionProgram.uniforms.uVelocity,velocity[$(404)][2]),gl[$(369)](advectionProgram[$(443)][$(363)],density[$(404)][2]),gl[$(386)](advectionProgram.uniforms[$(447)],config.DENSITY_DISSIPATION),blit(density[$(377)][1]),density[$(413)]();for(var o=0,l=pointers[$(394)];o<l;o++){var _=pointers[o];_[$(433)]&&(splat(_.x,_.y,_.dx,_.dy,_.color),_[$(433)]=!1)}curlProgram.bind(),gl[$(368)](curlProgram[$(443)][$(384)],1/textureWidth,1/textureHeight),gl.uniform1i(curlProgram.uniforms[$(399)],velocity.first[2]),blit(curl[1]),vorticityProgram[$(418)](),gl[$(368)](vorticityProgram.uniforms[$(384)],1/textureWidth,1/textureHeight),gl[$(369)](vorticityProgram.uniforms[$(399)],velocity[$(404)][2]),gl[$(369)](vorticityProgram[$(443)][$(405)],curl[2]),gl[$(386)](vorticityProgram[$(443)].curl,config[$(456)]),gl[$(386)](vorticityProgram[$(443)].dt,x),blit(velocity[$(377)][1]),velocity.swap(),divergenceProgram.bind(),gl.uniform2f(divergenceProgram.uniforms[$(384)],1/textureWidth,1/textureHeight),gl[$(369)](divergenceProgram.uniforms.uVelocity,velocity.first[2]),blit(divergence[1]),clearProgram[$(418)]();var n=pressure[$(404)][2];gl[$(387)](gl[$(382)]+n),gl[$(479)](gl[$(436)],pressure[$(404)][0]),gl[$(369)](clearProgram[$(443)][$(367)],n),gl[$(386)](clearProgram[$(443)][$(464)],config.PRESSURE_DISSIPATION),blit(pressure[$(377)][1]),pressure[$(413)](),pressureProgram[$(418)](),gl[$(368)](pressureProgram[$(443)].texelSize,1/textureWidth,1/textureHeight),gl[$(369)](pressureProgram[$(443)].uDivergence,divergence[2]),n=pressure.first[2],gl.activeTexture(gl[$(382)]+n);for(var v=0;v<config.PRESSURE_ITERATIONS;v++)gl[$(479)](gl[$(436)],pressure.first[0]),gl[$(369)](pressureProgram[$(443)][$(453)],n),blit(pressure[$(377)][1]),pressure.swap();gradienSubtractProgram[$(418)](),gl[$(368)](gradienSubtractProgram[$(443)].texelSize,1/textureWidth,1/textureHeight),gl.uniform1i(gradienSubtractProgram[$(443)][$(453)],pressure[$(404)][2]),gl[$(369)](gradienSubtractProgram[$(443)][$(399)],velocity[$(404)][2]),blit(velocity[$(377)][1]),velocity.swap(),gl[$(391)](0,0,gl[$(448)],gl[$(423)]),displayProgram.bind(),gl.uniform1i(displayProgram.uniforms[$(367)],density[$(404)][2]),blit(null),requestAnimationFrame(update)}function splat($,x,e,r,t){var a=_0x519f73;splatProgram[a(418)](),gl[a(369)](splatProgram[a(443)][a(482)],velocity[a(404)][2]),gl[a(386)](splatProgram[a(443)].aspectRatio,canvas[a(402)]/canvas[a(410)]),gl[a(368)](splatProgram.uniforms.point,$/canvas[a(402)],1-x/canvas[a(410)]),gl[a(400)](splatProgram.uniforms.color,e,-r,1),gl[a(386)](splatProgram[a(443)][a(362)],config.SPLAT_RADIUS),blit(velocity[a(377)][1]),velocity.swap(),gl[a(369)](splatProgram.uniforms[a(482)],density[a(404)][2]),gl.uniform3f(splatProgram[a(443)][a(392)],.3*t[0],.3*t[1],.3*t[2]),blit(density[a(377)][1]),density[a(413)]()}function resizeCanvas(){var $=_0x519f73;(canvas.width!==canvas[$(434)]||canvas.height!==canvas[$(455)])&&(canvas[$(402)]=canvas[$(434)],canvas[$(410)]=canvas[$(455)],initFramebuffers())}update();var count=0,colorArr=[Math[_0x519f73(357)]()+.2,Math[_0x519f73(357)]()+.2,Math.random()+.2];function _0x491e(){var $=["name","texImage2D","experimental-webgl","push","drawingBufferHeight","vertexAttribPointer","createBuffer","attachShader","bindFramebuffer","offsetX","pop","getContext","COLOR_ATTACHMENT0","precision highp float; precision mediump sampler2D; varying vec2 vUv; varying vec2 vL; varying vec2 vR; varying vec2 vT; varying vec2 vB; uniform sampler2D uVelocity; void main () {     float L = texture2D(uVelocity, vL).y;     float R = texture2D(uVelocity, vR).y;     float T = texture2D(uVelocity, vT).x;     float B = texture2D(uVelocity, vB).x;     float vorticity = R - L - T + B;     gl_FragColor = vec4(vorticity, 0.0, 0.0, 1.0); }","moved","clientWidth","createFramebuffer","TEXTURE_2D","prototype","clearColor","TEXTURE_MAG_FILTER","useProgram","OES_texture_half_float","VERTEX_SHADER","uniforms","pageX","precision highp float; precision mediump sampler2D; varying vec2 vUv; uniform sampler2D uTexture; uniform float value; void main () {     gl_FragColor = value * texture2D(uTexture, vUv); }","webgl","dissipation","drawingBufferWidth","TEXTURE_MIN_FILTER","getShaderInfoLog","createProgram","FRAMEBUFFER","uPressure","now","clientHeight","CURL","OES_texture_half_float_linear","bufferData","getProgramParameter","clear","147672fyKwIf","formatRG","1074534NUrEyt","value","linkProgram","precision highp float; precision mediump sampler2D; varying vec2 vUv; uniform sampler2D uTexture; void main () {     gl_FragColor = texture2D(uTexture, vUv); }","precision highp float; precision mediump sampler2D; attribute vec2 aPosition; varying vec2 vUv; varying vec2 vL; varying vec2 vR; varying vec2 vT; varying vec2 vB; uniform vec2 texelSize; void main () {     vUv = aPosition * 0.5 + 0.5;     vL = vUv - vec2(texelSize.x, 0.0);     vR = vUv + vec2(texelSize.x, 0.0);     vT = vUv + vec2(0.0, texelSize.y);     vB = vUv - vec2(0.0, texelSize.y);     gl_Position = vec4(aPosition, 0.0, 1.0); }","getElementsByTagName","enableVertexAttribArray","precision highp float; precision mediump sampler2D; varying vec2 vUv; uniform sampler2D uVelocity; uniform sampler2D uSource; uniform vec2 texelSize; uniform float dt; uniform float dissipation; vec4 bilerp (in sampler2D sam, in vec2 p) {     vec4 st;     st.xy = floor(p - 0.5) + 0.5;     st.zw = st.xy + 1.0;     vec4 uv = st * texelSize.xyxy;     vec4 a = texture2D(sam, uv.xy);     vec4 b = texture2D(sam, uv.zy);     vec4 c = texture2D(sam, uv.xw);     vec4 d = texture2D(sam, uv.zw);     vec2 f = p - st.xy;     return mix(mix(a, b, f.x), mix(c, d, f.x), f.y); } void main () {     vec2 coord = gl_FragCoord.xy - dt * texture2D(uVelocity, vUv).xy;     gl_FragColor = dissipation * bilerp(uSource, coord);     gl_FragColor.a = 1.0; }","addEventListener","TEXTURE_WRAP_T","precision highp float; precision mediump sampler2D; varying vec2 vUv; uniform sampler2D uVelocity; uniform sampler2D uSource; uniform vec2 texelSize; uniform float dt; uniform float dissipation; void main () {     vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;     gl_FragColor = dissipation * texture2D(uSource, coord); }","FLOAT","min","8cLuLkI","getProgramInfoLog","TRIANGLES","bindTexture","LINEAR","40qDzqYZ","uTarget","1381243lXcpUI","random","createShader","ARRAY_BUFFER","program","texParameteri","radius","uSource","EXT_color_buffer_float","FRAGMENT_SHADER","CLAMP_TO_EDGE","uTexture","uniform2f","uniform1i","mousemove","RGBA16F","canvas","precision highp float; precision mediump sampler2D; varying vec2 vUv; uniform sampler2D uTarget; uniform float aspectRatio; uniform vec3 color; uniform vec2 point; uniform float radius; void main () {     vec2 p = vUv - point.xy;     p.x *= aspectRatio;     vec3 splat = exp(-dot(p, p) / radius) * color;     vec3 base = texture2D(uTarget, vUv).xyz;     gl_FragColor = vec4(base + splat, 1.0); }","HALF_FLOAT_OES","ELEMENT_ARRAY_BUFFER","1670136YlfhKY","second","precision highp float; precision mediump sampler2D; varying vec2 vUv; varying vec2 vL; varying vec2 vR; varying vec2 vT; varying vec2 vB; uniform sampler2D uVelocity; uniform sampler2D uCurl; uniform float curl; uniform float dt; void main () {     float L = texture2D(uCurl, vL).y;     float R = texture2D(uCurl, vR).y;     float T = texture2D(uCurl, vT).x;     float B = texture2D(uCurl, vB).x;     float C = texture2D(uCurl, vUv).x;     vec2 force = vec2(abs(T) - abs(B), abs(R) - abs(L));     force *= 1.0 / length(force + 0.00001) * curl * C;     vec2 vel = texture2D(uVelocity, vUv).xy;     gl_FragColor = vec4(vel + force * dt, 0.0, 1.0); }","pageY","22927464zGlVwP","1960916bgZrFU","TEXTURE0","preventDefault","texelSize","TEXTURE_DOWNSAMPLE","uniform1f","activeTexture","NEAREST","bindBuffer","down","viewport","color","internalFormat","length","3880455KbDjgQ","STATIC_DRAW","RGBA","drawElements","uVelocity","uniform3f","HALF_FLOAT","width","TEXTURE_WRAP_S","first","uCurl","UNSIGNED_SHORT","VELOCITY_DISSIPATION","getExtension","precision highp float; precision mediump sampler2D; varying vec2 vUv; varying vec2 vL; varying vec2 vR; varying vec2 vT; varying vec2 vB; uniform sampler2D uVelocity; vec2 sampleVelocity (in vec2 uv) {     vec2 multiplier = vec2(1.0, 1.0);     if (uv.x < 0.0) { uv.x = 0.0; multiplier.x = -1.0; }     if (uv.x > 1.0) { uv.x = 1.0; multiplier.x = -1.0; }     if (uv.y < 0.0) { uv.y = 0.0; multiplier.y = -1.0; }     if (uv.y > 1.0) { uv.y = 1.0; multiplier.y = -1.0; }     return multiplier * texture2D(uVelocity, uv).xy; } void main () {     float L = sampleVelocity(vL).x;     float R = sampleVelocity(vR).x;     float T = sampleVelocity(vT).y;     float B = sampleVelocity(vB).y;     float div = 0.5 * (R - L + T - B);     gl_FragColor = vec4(div, 0.0, 0.0, 1.0); }","height","OES_texture_float_linear","getShaderParameter","swap","RG16F","Cannot call a class as a function","offsetY","precision highp float; precision mediump sampler2D; varying vec2 vUv; varying vec2 vL; varying vec2 vR; varying vec2 vT; varying vec2 vB; uniform sampler2D uPressure; uniform sampler2D uDivergence; vec2 boundary (in vec2 uv) {     uv = min(max(uv, 0.0), 1.0);     return uv; } void main () {     float L = texture2D(uPressure, boundary(vL)).x;     float R = texture2D(uPressure, boundary(vR)).x;     float T = texture2D(uPressure, boundary(vT)).x;     float B = texture2D(uPressure, boundary(vB)).x;     float C = texture2D(uPressure, vUv).x;     float divergence = texture2D(uDivergence, vUv).x;     float pressure = (L + R + B + T - divergence) * 0.25;     gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0); }","bind"];return(_0x491e=function(){return $})()}canvas[_0x519f73(471)](_0x519f73(370),function($){var x=_0x519f73;++count>25&&(colorArr=[Math[x(357)]()+.2,Math[x(357)]()+.2,Math[x(357)]()+.2],count=0),pointers[0].down=!0,pointers[0][x(392)]=colorArr,pointers[0].moved=pointers[0][x(390)],pointers[0].dx=($[x(428)]-pointers[0].x)*10,pointers[0].dy=($[x(416)]-pointers[0].y)*10,pointers[0].x=$[x(428)],pointers[0].y=$.offsetY}),canvas[_0x519f73(471)]("touchmove",function($){var x=_0x519f73;$[x(383)]();var e=$.targetTouches;++count>25&&(colorArr=[Math[x(357)]()+.2,Math[x(357)]()+.2,Math[x(357)]()+.2],count=0);for(var r=0,t=e[x(394)];r<t;r++){r>=pointers[x(394)]&&pointers.push(new pointerPrototype),pointers[r].id=e[r].identifier,pointers[r][x(390)]=!0,pointers[r].x=e[r][x(444)],pointers[r].y=e[r][x(379)],pointers[r][x(392)]=colorArr;var a=pointers[r];a[x(433)]=a[x(390)],a.dx=(e[r][x(444)]-a.x)*10,a.dy=(e[r].pageY-a.y)*10,a.x=e[r][x(444)],a.y=e[r].pageY}},!1);
</script>